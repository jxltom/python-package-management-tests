sudo: false

language: python

python: "3.6"

env:
  matrix:
    - TESTDIR="pip-install-editable-package-with-markers" PIP="pip==9.0.1" PIPENV="pipenv"
    - TESTDIR="pip-install-editable-package-with-markers" PIP="pip" PIPENV="pipenv"

    - TESTDIR="pip-should-install-editable-packages-with-different-version" PIPENV="pipenv"

    - TESTDIR="pip-should-install-editable-packages-with-same-version" PIPENV="pipenv"

    - TESTDIR="pip-vs-pipenv-speed" PIPENV="pipenv"

    - TESTDIR="pipenv-shouldnt-different-lock-for-different-python-version" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-shouldnt-different-lock-for-different-python-version" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-shouldnt-different-lock-for-different-python-version" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-shouldnt-different-lock-for-different-python-version" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-support-pip181" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-support-pip181" PIPENV="pipenv==2018.6.25"
    - TESTDIR="pipenv-support-pip181" PIPENV="pipenv==2018.5.18"
    - TESTDIR="pipenv-support-pip181" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-support-pip181" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-support-pip181" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-incorrect-constraints-in-lock" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-incorrect-constraints-in-lock" PIPENV="pipenv==2018.6.25"
    - TESTDIR="pipenv-incorrect-constraints-in-lock" PIPENV="pipenv==2018.5.18"
    - TESTDIR="pipenv-incorrect-constraints-in-lock" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-incorrect-constraints-in-lock" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-incorrect-constraints-in-lock" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-semicolon-in-editable-package" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-semicolon-in-editable-package" PIPENV="pipenv==2018.6.25"
    - TESTDIR="pipenv-semicolon-in-editable-package" PIPENV="pipenv==2018.5.18"
    - TESTDIR="pipenv-semicolon-in-editable-package" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-semicolon-in-editable-package" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-semicolon-in-editable-package" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-semicolon-in-requirements" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-semicolon-in-requirements" PIPENV="pipenv==2018.6.25" 
    - TESTDIR="pipenv-semicolon-in-requirements" PIPENV="pipenv==2018.5.18" 
    - TESTDIR="pipenv-semicolon-in-requirements" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-semicolon-in-requirements" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-semicolon-in-requirements" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-recreate-virtualenv" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-recreate-virtualenv" PIPENV="pipenv==2018.6.25"
    - TESTDIR="pipenv-recreate-virtualenv" PIPENV="pipenv==2018.5.18"
    - TESTDIR="pipenv-recreate-virtualenv" PIPENV="pipenv==11.10.0"
    - TESTDIR="pipenv-recreate-virtualenv" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-recreate-virtualenv" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-recreate-virtualenv" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-lock-platform-markers" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="pipenv==2018.6.25"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="pipenv==2018.5.18"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="pipenv==11.10.4"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="pipenv==11.10.0"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-lock-no-support-@" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-lock-no-support-@" PIPENV="pipenv==2018.6.25"
    - TESTDIR="pipenv-lock-no-support-@" PIPENV="pipenv==2018.5.18"
    - TESTDIR="pipenv-lock-no-support-@" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-lock-no-support-@" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-lock-platform-markers" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

    - TESTDIR="pipenv-lock-isnot-update-if-editable-is-installed" PIPENV="pipenv==2018.7.1"
    - TESTDIR="pipenv-lock-isnot-update-if-editable-is-installed" PIPENV="pipenv==11.10.4"
    - TESTDIR="pipenv-lock-isnot-update-if-editable-is-installed" PIPENV="pipenv==11.10.0"
    - TESTDIR="pipenv-lock-isnot-update-if-editable-is-installed" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-lock-isnot-update-if-editable-is-installed" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-lock-isnot-update-if-editable-is-installed" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"
    
    - TESTDIR="pipenv-with-pip9-cannot-work-with-vcs" PIPENV="pipenv==2018.7.1" 
    - TESTDIR="pipenv-with-pip9-cannot-work-with-vcs" PIPENV="pipenv==2018.5.18" 
    - TESTDIR="pipenv-with-pip9-cannot-work-with-vcs" PIPENV="pipenv==11.9.0"
    - TESTDIR="pipenv-with-pip9-cannot-work-with-vcs" PIPENV="https://github.com/pypa/pipenv/archive/master.zip"
    - TESTDIR="pipenv-with-pip9-cannot-work-with-vcs" PIPENV="https://github.com/jxltom/pipenv/archive/master.zip"

matrix:
  fast_finish: true

before_script:
  # This should be pinned to latest pip version except for known bugs
  - pip install -U pip==18.0
  - pip install "$PIPENV"
  - cd "$TESTDIR"

script:
  - |
    set -e;
    if [ "$TESTDIR" = "pip-install-editable-package-with-markers" ]; then
      pipenv run pip install "$PIP"
      pipenv run pip install -r requirements-error.txt && exit 1 || exit 0
      pipenv run pip install -r requirements-ok.txt
    elif [ "$TESTDIR" = "pip-should-install-editable-packages-with-different-version" ]; then
      pipenv run pip install -r requirements.txt
      pipenv run pip list | grep 3.7.5
      pipenv run pip install -r requirements-updated.txt
      pipenv run pip list | grep 3.8.1
    elif [ "$TESTDIR" = "pip-should-install-editable-packages-with-same-version" ]; then
      pipenv run pip install -r requirements.txt
      pipenv run pip install -r requirements.txt | grep -i "successfully installed pytest"
    elif [ "$TESTDIR" = "pip-vs-pipenv-speed" ]; then
      pipenv uninstall --all > /dev/null
      time pipenv install --deploy > /dev/null
      pipenv uninstall --all > /dev/null
      time pipenv install --ignore-pipfile > /dev/null
      pipenv uninstall --all > /dev/null
      time pipenv install --deploy --ignore-pipfile > /dev/null
      pipenv uninstall --all > /dev/null
      time pipenv sync > /dev/null
      pipenv uninstall --all > /dev/null
      time pipenv run pip install -r requirements.txt > /dev/null

      pipenv uninstall --all > /dev/null
      pipenv install > /dev/null
      time pipenv install --deploy > /dev/null
      pipenv uninstall --all > /dev/null
      pipenv install > /dev/null
      time pipenv install --ignore-pipfile > /dev/null
      pipenv uninstall --all > /dev/null
      pipenv install > /dev/null
      time pipenv install --deploy --ignore-pipfile > /dev/null
      pipenv uninstall --all > /dev/null
      pipenv install > /dev/null
      time pipenv sync > /dev/null
      pipenv uninstall --all > /dev/null
      pipenv install > /dev/null
      time pipenv run pip install -r requirements.txt > /dev/null
    elif [ "$TESTDIR" = "pipenv-shouldnt-different-lock-for-different-python-version" ]; then
      pipenv lock --clear
      grep pathlib2 Pipfile.lock
    elif [ "$TESTDIR" = "pipenv-support-pip181" ]; then
      pip install pip==18.1
      pipenv install
      pipenv graph
    elif [ "$TESTDIR" = "pipenv-incorrect-constraints-in-lock" ]; then
      pipenv lock --clear
    elif [ "$TESTDIR" = "pipenv-semicolon-in-editable-package" ]; then
      pipenv lock --clear
    elif [ "$TESTDIR" = "pipenv-semicolon-in-requirements" ]; then
      pipenv lock -r > requirements.txt
      pip install -r requirements.txt
    elif [ "$TESTDIR" = "pipenv-recreate-virtualenv" ]; then
      export PIPENV_IGNORE_VIRTUALENVS=1
      pipenv install --system --deploy | grep "out of date" && exit 1 || exit 0
    elif [ "$TESTDIR" = "pipenv-lock-platform-markers" ]; then
      pipenv lock --clear
      grep platform_system Pipfile.lock
    elif [ "$TESTDIR" = "pipenv-lock-no-support-@" ]; then
      pipenv lock --clear
    elif [ "$TESTDIR" = "pipenv-lock-isnot-update-if-editable-is-installed" ]; then
      pipenv run pip install -e git+https://github.com/pytest-dev/pytest.git@aea962d#egg=pytest > /dev/null
      pipenv lock --clear
      grep 3f6a46c Pipfile.lock
    elif [ "$TESTDIR" = "pipenv-with-pip9-cannot-work-with-vcs" ]; then
      pip install pip==9.0.1
      pipenv lock --clear
    fi
